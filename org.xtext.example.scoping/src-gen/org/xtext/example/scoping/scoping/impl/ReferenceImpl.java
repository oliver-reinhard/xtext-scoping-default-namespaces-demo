/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.scoping.scoping.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.scoping.scoping.Chapter;
import org.xtext.example.scoping.scoping.Paragraph;
import org.xtext.example.scoping.scoping.Reference;
import org.xtext.example.scoping.scoping.ScopingPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.scoping.scoping.impl.ReferenceImpl#getCref <em>Cref</em>}</li>
 *   <li>{@link org.xtext.example.scoping.scoping.impl.ReferenceImpl#getQnref <em>Qnref</em>}</li>
 *   <li>{@link org.xtext.example.scoping.scoping.impl.ReferenceImpl#getPref <em>Pref</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReferenceImpl extends MinimalEObjectImpl.Container implements Reference
{
  /**
   * The cached value of the '{@link #getCref() <em>Cref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCref()
   * @generated
   * @ordered
   */
  protected Chapter cref;

  /**
   * The cached value of the '{@link #getQnref() <em>Qnref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQnref()
   * @generated
   * @ordered
   */
  protected Chapter qnref;

  /**
   * The cached value of the '{@link #getPref() <em>Pref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPref()
   * @generated
   * @ordered
   */
  protected Paragraph pref;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ScopingPackage.Literals.REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Chapter getCref()
  {
    if (cref != null && cref.eIsProxy())
    {
      InternalEObject oldCref = (InternalEObject)cref;
      cref = (Chapter)eResolveProxy(oldCref);
      if (cref != oldCref)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ScopingPackage.REFERENCE__CREF, oldCref, cref));
      }
    }
    return cref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Chapter basicGetCref()
  {
    return cref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCref(Chapter newCref)
  {
    Chapter oldCref = cref;
    cref = newCref;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScopingPackage.REFERENCE__CREF, oldCref, cref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Chapter getQnref()
  {
    if (qnref != null && qnref.eIsProxy())
    {
      InternalEObject oldQnref = (InternalEObject)qnref;
      qnref = (Chapter)eResolveProxy(oldQnref);
      if (qnref != oldQnref)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ScopingPackage.REFERENCE__QNREF, oldQnref, qnref));
      }
    }
    return qnref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Chapter basicGetQnref()
  {
    return qnref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQnref(Chapter newQnref)
  {
    Chapter oldQnref = qnref;
    qnref = newQnref;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScopingPackage.REFERENCE__QNREF, oldQnref, qnref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Paragraph getPref()
  {
    if (pref != null && pref.eIsProxy())
    {
      InternalEObject oldPref = (InternalEObject)pref;
      pref = (Paragraph)eResolveProxy(oldPref);
      if (pref != oldPref)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ScopingPackage.REFERENCE__PREF, oldPref, pref));
      }
    }
    return pref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Paragraph basicGetPref()
  {
    return pref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPref(Paragraph newPref)
  {
    Paragraph oldPref = pref;
    pref = newPref;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScopingPackage.REFERENCE__PREF, oldPref, pref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ScopingPackage.REFERENCE__CREF:
        if (resolve) return getCref();
        return basicGetCref();
      case ScopingPackage.REFERENCE__QNREF:
        if (resolve) return getQnref();
        return basicGetQnref();
      case ScopingPackage.REFERENCE__PREF:
        if (resolve) return getPref();
        return basicGetPref();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ScopingPackage.REFERENCE__CREF:
        setCref((Chapter)newValue);
        return;
      case ScopingPackage.REFERENCE__QNREF:
        setQnref((Chapter)newValue);
        return;
      case ScopingPackage.REFERENCE__PREF:
        setPref((Paragraph)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ScopingPackage.REFERENCE__CREF:
        setCref((Chapter)null);
        return;
      case ScopingPackage.REFERENCE__QNREF:
        setQnref((Chapter)null);
        return;
      case ScopingPackage.REFERENCE__PREF:
        setPref((Paragraph)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ScopingPackage.REFERENCE__CREF:
        return cref != null;
      case ScopingPackage.REFERENCE__QNREF:
        return qnref != null;
      case ScopingPackage.REFERENCE__PREF:
        return pref != null;
    }
    return super.eIsSet(featureID);
  }

} //ReferenceImpl
