/*
 * generated by Xtext 2.16.0
 */
grammar InternalScoping;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.scoping.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.scoping.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.scoping.services.ScopingGrammarAccess;

}
@parser::members {
	private ScopingGrammarAccess grammarAccess;

	public void setGrammarAccess(ScopingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBook
entryRuleBook
:
{ before(grammarAccess.getBookRule()); }
	 ruleBook
{ after(grammarAccess.getBookRule()); } 
	 EOF 
;

// Rule Book
ruleBook 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBookAccess().getGroup()); }
		(rule__Book__Group__0)
		{ after(grammarAccess.getBookAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDImport
entryRuleDImport
:
{ before(grammarAccess.getDImportRule()); }
	 ruleDImport
{ after(grammarAccess.getDImportRule()); } 
	 EOF 
;

// Rule DImport
ruleDImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDImportAccess().getGroup()); }
		(rule__DImport__Group__0)
		{ after(grammarAccess.getDImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChapter
entryRuleChapter
:
{ before(grammarAccess.getChapterRule()); }
	 ruleChapter
{ after(grammarAccess.getChapterRule()); } 
	 EOF 
;

// Rule Chapter
ruleChapter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChapterAccess().getGroup()); }
		(rule__Chapter__Group__0)
		{ after(grammarAccess.getChapterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParagraph
entryRuleParagraph
:
{ before(grammarAccess.getParagraphRule()); }
	 ruleParagraph
{ after(grammarAccess.getParagraphRule()); } 
	 EOF 
;

// Rule Paragraph
ruleParagraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParagraphAccess().getNameAssignment()); }
		(rule__Paragraph__NameAssignment)
		{ after(grammarAccess.getParagraphAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getGroup()); }
		(rule__Reference__Group__0)
		{ after(grammarAccess.getReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChapterAccess().getChapterAssignment_3_0()); }
		(rule__Chapter__ChapterAssignment_3_0)
		{ after(grammarAccess.getChapterAccess().getChapterAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getChapterAccess().getParagraphsAssignment_3_1()); }
		(rule__Chapter__ParagraphsAssignment_3_1)
		{ after(grammarAccess.getChapterAccess().getParagraphsAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getChapterAccess().getReferencesAssignment_3_2()); }
		(rule__Chapter__ReferencesAssignment_3_2)
		{ after(grammarAccess.getChapterAccess().getReferencesAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getGroup_0_0()); }
		(rule__Reference__Group_0_0__0)
		{ after(grammarAccess.getReferenceAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getGroup_0_1()); }
		(rule__Reference__Group_0_1__0)
		{ after(grammarAccess.getReferenceAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getGroup_0_2()); }
		(rule__Reference__Group_0_2__0)
		{ after(grammarAccess.getReferenceAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Book__Group__0__Impl
	rule__Book__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBookAccess().getBookKeyword_0()); }
	'book'
	{ after(grammarAccess.getBookAccess().getBookKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Book__Group__1__Impl
	rule__Book__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBookAccess().getNameAssignment_1()); }
	(rule__Book__NameAssignment_1)
	{ after(grammarAccess.getBookAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Book__Group__2__Impl
	rule__Book__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBookAccess().getImportsAssignment_2()); }
	(rule__Book__ImportsAssignment_2)*
	{ after(grammarAccess.getBookAccess().getImportsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Book__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBookAccess().getChaptersAssignment_3()); }
	(rule__Book__ChaptersAssignment_3)*
	{ after(grammarAccess.getBookAccess().getChaptersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DImport__Group__0__Impl
	rule__DImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getDImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__DImport__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getDImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chapter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chapter__Group__0__Impl
	rule__Chapter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChapterAccess().getChapterKeyword_0()); }
	'chapter'
	{ after(grammarAccess.getChapterAccess().getChapterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chapter__Group__1__Impl
	rule__Chapter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChapterAccess().getNameAssignment_1()); }
	(rule__Chapter__NameAssignment_1)
	{ after(grammarAccess.getChapterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chapter__Group__2__Impl
	rule__Chapter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChapterAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getChapterAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chapter__Group__3__Impl
	rule__Chapter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChapterAccess().getAlternatives_3()); }
	(rule__Chapter__Alternatives_3)*
	{ after(grammarAccess.getChapterAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chapter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChapterAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getChapterAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getAlternatives_0()); }
	(rule__Reference__Alternatives_0)
	{ after(grammarAccess.getReferenceAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getReferenceAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_0_0__0__Impl
	rule__Reference__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getCrefKeyword_0_0_0()); }
	'cref'
	{ after(grammarAccess.getReferenceAccess().getCrefKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getCrefAssignment_0_0_1()); }
	(rule__Reference__CrefAssignment_0_0_1)
	{ after(grammarAccess.getReferenceAccess().getCrefAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_0_1__0__Impl
	rule__Reference__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getQnrefKeyword_0_1_0()); }
	'qnref'
	{ after(grammarAccess.getReferenceAccess().getQnrefKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getQnrefAssignment_0_1_1()); }
	(rule__Reference__QnrefAssignment_0_1_1)
	{ after(grammarAccess.getReferenceAccess().getQnrefAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_0_2__0__Impl
	rule__Reference__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getPrefKeyword_0_2_0()); }
	'pref'
	{ after(grammarAccess.getReferenceAccess().getPrefKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getPrefAssignment_0_2_1()); }
	(rule__Reference__PrefAssignment_0_2_1)
	{ after(grammarAccess.getReferenceAccess().getPrefAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Book__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBookAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getBookAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__ImportsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBookAccess().getImportsDImportParserRuleCall_2_0()); }
		ruleDImport
		{ after(grammarAccess.getBookAccess().getImportsDImportParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__ChaptersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBookAccess().getChaptersChapterParserRuleCall_3_0()); }
		ruleChapter
		{ after(grammarAccess.getBookAccess().getChaptersChapterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DImport__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getDImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChapterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChapterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__ChapterAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChapterAccess().getChapterChapterParserRuleCall_3_0_0()); }
		ruleChapter
		{ after(grammarAccess.getChapterAccess().getChapterChapterParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__ParagraphsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChapterAccess().getParagraphsParagraphParserRuleCall_3_1_0()); }
		ruleParagraph
		{ after(grammarAccess.getChapterAccess().getParagraphsParagraphParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chapter__ReferencesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChapterAccess().getReferencesReferenceParserRuleCall_3_2_0()); }
		ruleReference
		{ after(grammarAccess.getChapterAccess().getReferencesReferenceParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParagraphAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getParagraphAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__CrefAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getCrefChapterCrossReference_0_0_1_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getCrefChapterIDTerminalRuleCall_0_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceAccess().getCrefChapterIDTerminalRuleCall_0_0_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getCrefChapterCrossReference_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__QnrefAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getQnrefChapterCrossReference_0_1_1_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getQnrefChapterQualifiedNameParserRuleCall_0_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getReferenceAccess().getQnrefChapterQualifiedNameParserRuleCall_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getQnrefChapterCrossReference_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__PrefAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getPrefParagraphCrossReference_0_2_1_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getPrefParagraphIDTerminalRuleCall_0_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceAccess().getPrefParagraphIDTerminalRuleCall_0_2_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getPrefParagraphCrossReference_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
